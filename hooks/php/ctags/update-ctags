#!/bin/bash -u
source .git/hooks/git_config_wrapper.sh

new_flags_are_supported()
{
	ctags --help|grep ' fields'|cut -d '"' -f2|grep a|grep i|grep m|grep S
}

build_ctags_command()
{
	local tagKinds
	get_hook_config php-ctags tag-kinds tagKinds optional
	if [[ $? -ne 0 ]]
	then
		tagKinds=cfi
	fi

	local command=$(cat <<-EOT
		ctags
			-h ".php"
			--recurse
			-f.git/tags.$$
			--languages=php
			--totals=yes
			--tag-relative=yes
			--PHP-kinds=${tagKinds}
			--exclude="*.js"
			--exclude=".svn"
			--exclude=".git"
			--exclude=".rsync_cache"
			--exclude="vendor/*/vendor"
			--exclude="vendor/*/Tests"
		EOT
		)
	if [ new_flags_are_supported ]
	then
		command="${command} --fields=+aimS"
	else
		command="$command $(cat <<- OLD_FLAGS
			--regex-PHP='/(abstract)?\s+class\s+([^ ]+)/\2/c/'
			--regex-PHP='/interface\s+([^ ]+)/\1/i/'
			OLD_FLAGS
			)"
	fi
	local projectType
	if get_hook_config php-ctags project-type projectType optional
	then
		case $projectType in
			symfony2)
				command="$command --exclude='app/cache/*'"
			;;
			symfony1)
				command="$command --exclude='cache/*' --exclude='plugins/*/vendor'"
			;;
			*)
				echo "Unsupported project type $projectType" >&2
			;;
		esac
	fi
	eval $command
}

trap "rm --force .git/tags.$$" EXIT
build_ctags_command

mv .git/tags.$$ .git/tags
